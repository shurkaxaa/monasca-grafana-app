{"version":3,"sources":["../../src/components/raised_alarms.js"],"names":["config","appEvents","MonascaClient","RaisedAlarmsPageCtrl","$scope","$injector","$location","backendSrv","datasourceSrv","alertSrv","monasca","filters","editFilterIndex","search","dimensions","split","map","kv","k","v","key","value","pageLoaded","loadFailed","alarms","loadAlarms","suggestDimensionNames","_suggestDimensionNames","bind","suggestDimensionValues","_suggestDimensionValues","query","callback","listDimensionNames","then","filter","listDimensionValues","index","push","splice","refreshAlarms","every","f","listAlarms","catch","set","err","message","id","deleting","findIndex","n","find","setAlarmDeleting","deleteAlarm","alarmDeleted","alarm","emit","title","text","text2","name","yesText","icon","onConfirm","confirmDeleteAlarm","templateUrl"],"mappings":"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","file":"raised_alarms.js","sourcesContent":["/*\n *   Copyright 2017 StackHPC\n *\n *   Licensed under the Apache License, Version 2.0 (the \"License\");\n *   you may not use this file except in compliance with the License.\n *   You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n *   Unless required by applicable law or agreed to in writing, software\n *   distributed under the License is distributed on an \"AS IS\" BASIS,\n *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *   See the License for the specific language governing permissions and\n *   limitations under the License.\n */\n\nimport config from 'app/core/config';\nimport appEvents from 'app/core/app_events';\nimport MonascaClient from './monasca_client';\n\nexport class RaisedAlarmsPageCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $location, backendSrv, datasourceSrv, alertSrv) {\n    this.alertSrv = alertSrv\n    this.monasca = new MonascaClient(backendSrv, datasourceSrv);\n    this.filters = [];\n    this.editFilterIndex = -1;\n\n    if ('dimensions' in $location.search()) {\n      this.filters = $location.search().dimensions\n\t.split(',')\n\t.map(kv => kv.split(':'))\n\t.map(([k, v]) => ({ key: k, value: v}));\n    }\n    \n    this.pageLoaded = false;\n    this.loadFailed = false;\n    this.alarms = [];\n    this.loadAlarms();\n    \n    this.suggestDimensionNames = this._suggestDimensionNames.bind(this);\n    this.suggestDimensionValues = this._suggestDimensionValues.bind(this);\n  }\n\n  _suggestDimensionNames(query, callback) {\n    this.monasca.listDimensionNames().then(callback);\n  }\n\n  _suggestDimensionValues(query, callback) {\n    var filter = this.filters[this.editFilterIndex];\n    if (filter && filter.key) {\n      this.monasca.listDimensionValues(filter.key).then(callback);\n    }\n  }\n\n  editFilter(index) {\n    this.editFilterIndex = index;\n  }\n\n  addFilter() {\n    this.filters.push({});\n  }\n\n  removeFilter(index) {\n    var filter = this.filters[index];\n    this.filters.splice(index, 1);\n\n    // Don't refresh if the filter was never valid enough to be applied.\n    if (filter.key && filter.value) {\n      this.refreshAlarms();\n    }\n  }\n\n  applyFilter() {\n    // Check filter is complete before applying.\n    if (this.filters.every(f => f.key && f.value)) {\n      this.refreshAlarms();\n    }\n  }\n  \n  refreshAlarms() {\n    if (this.pageLoaded) {      \n      this.pageLoaded = false;\n      this.loadAlarms();\n    }\n  }\n  \n  loadAlarms() {\n    this.monasca.listAlarms(this.filters, 'ALARM').then(alarms => {\n      this.alarms = alarms;    \n    }).catch(err => {\n      this.alertSrv.set(\"Failed to get alarms.\", err.message, 'error', 10000);\n      this.loadFailed = true;\n    }).then(() => {\n      this.pageLoaded = true;\n    });\n  }\n\n  setAlarmDeleting(id, deleting) {\n    var index = this.alarms.findIndex(n => n.id === id);\n    if (index !== -1) {\n      this.alarms[index].deleting = true;\n    }\n  }    \n\n  alarmDeleted(id) {\n    var index = this.alarms.find(n => n.id === id);\n    if (index !== -1) {\n      this.alarms.splice(index, 1);\n    }\n  }    \n\n  confirmDeleteAlarm(id) {\n    this.setAlarmDeleting(id, true);\n    \n    this.monasca.deleteAlarm(id).then(() => {\n      this.alarmDeleted(id);\n    }).catch(err => {\n      this.setAlarmDeleting(id, false);\n      this.alertSrv.set(\"Failed to delete alarm.\", err.message, 'error', 10000);\n    });\n  }\n\n  deleteAlarm(alarm) {\n    appEvents.emit('confirm-modal', {\n      title: 'Delete',\n      text: 'Are you sure you want to delete this alarm?',\n      text2: alarm.name,\n      yesText: \"Delete\",\n      icon: \"fa-trash\",\n      onConfirm: () => {\n        this.confirmDeleteAlarm(alarm.id);\n      }\n    });\n  }\n}\n\nRaisedAlarmsPageCtrl.templateUrl = 'components/raised_alarms.html';\n"]}