{"version":3,"sources":["../../src/components/monasca_client.js"],"names":["config","appEvents","MonascaClient","backendSrv","datasourceSrv","ds","_get","then","resp","data","elements","map","e","dimension_name","catch","err","params","dimension_value","dimensions","state","metric_dimensions","d","key","value","join","id","_delete","group_by","alarm_definition","_post","actions_enabled","patchAlarmDefinition","_patch","element","type","notification","path","_request","Promise","resolve","get","response","jsonData","datasourceName","message","method","_getDataSource","headers","data_source","token","options","url","withCredentials","datasourceRequest","status","monasca_response","description","err_name","Object","keys"],"mappings":"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","file":"monasca_client.js","sourcesContent":["/*\n *   Copyright 2017 StackHPC\n *\n *   Licensed under the Apache License, Version 2.0 (the \"License\");\n *   you may not use this file except in compliance with the License.\n *   You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n *   Unless required by applicable law or agreed to in writing, software\n *   distributed under the License is distributed on an \"AS IS\" BASIS,\n *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *   See the License for the specific language governing permissions and\n *   limitations under the License.\n */\n\nimport config from 'app/core/config';\nimport appEvents from 'app/core/app_events';\n\nexport default class MonascaClient {\n\n  constructor(backendSrv, datasourceSrv) {\n    this.ds = null;\n    this.backendSrv = backendSrv;\n    this.datasourceSrv = datasourceSrv;\n  }\n\n  // Dimensions\n\n  listDimensionNames() {\n    return this._get('/v2.0/metrics/dimensions/names')\n      .then(resp => resp.data.elements.map(e => e.dimension_name))\n      .catch(err => { throw err; });\n  }\n\n  listDimensionValues(dimension_name) {\n    var params = {\n      dimension_name: dimension_name\n    };\n    return this._get('/v2.0/metrics/dimensions/names/values', params)\n      .then(resp => resp.data.elements.map(e => e.dimension_value))\n      .catch(err => { throw err; });\n  }\n\n  \n  // Alarms\n  \n  listAlarms(dimensions, state) {\n    var params = {};\n    if (dimensions) {\n      params.metric_dimensions =\n\tdimensions\n\t.map(d => d.key + ':' + d.value)\n\t.join(',');\n    }\n    if (state) {\n        params.state = state;\n    }\n    return this._get('/v2.0/alarms/', params)\n      .then(resp => resp.data.elements)\n      .catch(err => { throw err; });\n  }\n\n  deleteAlarm(id) {\n    return this._delete('/v2.0/alarms/' + id)\n      .then(resp => null)\n      .catch(err => { throw err; });\n  }\n\n  countAlarms(group_by) {\n    return this._get('/v2.0/alarms/count/', { group_by: group_by })\n      .then(resp => resp.data)\n      .catch(err => { throw err; });\n  }\n  \n  // Alarm Definitions\n  \n  listAlarmDefinitions() {\n    return this._get('/v2.0/alarm-definitions/')\n      .then(resp => resp.data.elements)\n      .catch(err => { throw err; });\n  }\n\n  getAlarmDefinition(id) {\n    return this._get('/v2.0/alarm-definitions/' + id)\n      .then(resp => resp.data)\n      .catch(err => { throw err; });\n  }\n  \n  createAlarmDefinition(alarm_definition) {\n    return this._post('/v2.0/alarm-definitions/', alarm_definition)\n      .then(resp => resp.data)\n      .catch(err => { throw err; });\n  }\n\n  enableAlarmDefinition(id, actions_enabled) {\n    return this.patchAlarmDefinition(id, { actions_enabled: !!actions_enabled });\n  }\n\n  patchAlarmDefinition(id, alarm_definition) {\n    return this._patch('/v2.0/alarm-definitions/' + id, alarm_definition)\n      .then(resp => resp.data)\n      .catch(err => { throw err; });\n  }\n  \n  deleteAlarmDefinition(id) {\n    return this._delete('/v2.0/alarm-definitions/' + id)\n      .then(resp => null)\n      .catch(err => { throw err; });\n  }\n\n  // Notification Method Types\n  \n  listNotificationTypes() {\n    return this._get('/v2.0/notification-methods/types/')\n      .then(resp => resp.data.elements.map(element => element.type))\n      .catch(err => { throw err; });\n  }\n\n  // Notification Methods\n  \n  listNotifications() {\n    return this._get('/v2.0/notification-methods/')\n      .then(resp => resp.data.elements)\n      .catch(err => { throw err; });\n  }\n\n  getNotification(id) {\n    return this._get('/v2.0/notification-methods/' + id)\n      .then(resp => resp.data)\n      .catch(err => { throw err; });    \n  }\n\n  patchNotification(id, notification) {\n    return this._patch('/v2.0/notification-methods/'+ id, notification)\n      .then(resp => resp.data)\n      .catch(err => { throw err; });\n  }\n\n  createNotification(notification) {\n    return this._post('/v2.0/notification-methods/', notification)\n      .then(resp => resp.data)\n      .catch(err => { throw err; });\n  }\n  \n  deleteNotification(id) {\n    return this._delete('/v2.0/notification-methods/' + id)\n      .then(resp => null)\n      .catch(err => { throw err; });\n  }\n\n  \n  _delete(path, params) {\n    return this._request('DELETE', path, params, null);\n  };\n  \n  _get(path, params) {\n    return this._request('GET', path, params, null);\n  };\n\n  _post(path, data) {\n    return this._request('POST', path, null, data);\n  };\n\n  _patch(path, data) {\n    return this._request('PATCH', path, null, data);\n  };\n\n  _getDataSource() {\n    if (this.ds) {\n      return Promise.resolve(this.ds);\n    }\n    \n    return this.backendSrv.get(\"api/plugins/monasca-app/settings\")\n      .then(response => {\n\tif (!response.jsonData || !response.jsonData.datasourceName) {\n\t  throw { message: 'No datasource selected in app configuration' };\n\t}\n\treturn this.datasourceSrv.get(response.jsonData.datasourceName)\n\t  .then(ds => {\n\t    this.ds = ds;\n\t    return this.ds;\n\t  })\n\t  .catch(err => { throw err; });\n      })\n      .catch(err => { throw err; });\n  }\n  \n  _request(method, path, params, data) {\n    return this._getDataSource().then(data_source => {\n      \n      var headers = {\n\t'Content-Type': 'application/json',\n\t'X-Auth-Token': data_source.token\n      };\n\n      var options = {\n\tmethod: method,\n\turl:    data_source.url + path,\n\tparams: params,\n\tdata: data,\n\theaders: headers,\n\twithCredentials: true,\n      };\n\n      return data_source.backendSrv.datasourceRequest(options).catch(err => {\n\tif (err.status !== 0 || err.status >= 300) {\n          var monasca_response;\n          if (err.data) {\n            if (err.data.message){\n              monasca_response = err.data.message;\n\t    }\n\t    else if (err.data.description) {\n\t      monasca_response = err.data.description;\n\t    } else{\n              var err_name = Object.keys(err.data)[0];\n              monasca_response = err.data[err_name].message;\n            }\n          }\n          if (monasca_response) {\n            throw { message: 'Monasca Error Response: ' + monasca_response };\n          } else {\n            throw { message: 'Monasca Error Status: ' + err.status };\n          }\n\t}\n      });\n    }).catch(err => { throw err; });\n  };\n\n  \n}\n\n"]}